<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC2RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB0AAAAOAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAA
        dgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEA
        bABpAHQAeQAgAD0AIAA4ADUACgAAAAAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4d
        GhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAiQEbAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9/ooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        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
</value>
  </data>
</root>